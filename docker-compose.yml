version: '3.8'

services:
  backend:
    build:
      context: .
      target: backend
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=production
      - PORT=8080
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      - FRAME_RATE_LIMIT=${FRAME_RATE_LIMIT:-2}
      - MAX_SESSIONS=${MAX_SESSIONS:-100}
      - VISUAL_MAX_RESOLUTION=${VISUAL_MAX_RESOLUTION:-1024}
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - app-network

  frontend:
    build:
      context: .
      target: frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_BACKEND_URL=${NEXT_PUBLIC_BACKEND_URL:-http://localhost:8080}
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - app-network

volumes:
  redis_data:

networks:
  app-network:
    driver: bridge